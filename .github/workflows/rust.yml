name: Build

# read-only repo token
# no access to secrets
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  verify-build:
    runs-on: ubuntu-latest

    steps:
    # checkout repo
    - uses: actions/checkout@v3

    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy

    # restore cargo cache from previous runs
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.0.0

    - name: install alsa (sound driver) and cmake
      run: sudo apt-get update && sudo apt-get install libasound2-dev cmake

    # check it builds
    - name: Build
      run: cargo build --verbose --all-targets --features cubeb

    # run tests
    - name: Run tests
      run: cargo test --verbose --features cubeb

    # make sure all code has been formatted with rustfmt
    - name: check rustfmt
      run: cargo fmt -- --check --color always

    # run clippy to verify we have no warnings
    - name: cargo clippy
      run: cargo clippy --all-targets --features cubeb -- -D warnings

    # check for rustdoc warnings
    - name: generate and verify rustdoc
      env:
        RUSTDOCFLAGS: -D warnings
      run: cargo doc --no-deps --document-private-items --workspace --features cubeb

  benchmark:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'

    steps:
    # checkout repo, install dependencies
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    # restore cargo cache from previous runs
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.0.0

    ## Benchmarks
    - name: install valgrind for benchmarks
      run: sudo apt-get install valgrind
    - name: Checkout main branch
      run: git checkout main
    - name: Copy over benchmarks from PR branch
      run: git checkout - -- benches/my_benchmark.rs
    - name: Revert when benches do not compile on main
      run: cargo check --benches --no-default-features || git checkout main -- benches/my_benchmark.rs
    - name: Run benchmarks for main branch
      run: cargo bench --no-default-features
    - name: Checkout PR branch
      run: git checkout -
    - name: Run bench against baseline
      run: cargo bench --no-default-features | sed '0,/^test result:/d' | tee bench.txt

    ## Save results
    ## see https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
    - name: Save PR number and bench results
      run: |
        mkdir -p ./pr
        echo ${{ github.event.number }} > ./pr/pr_number.txt
        mv bench.txt ./pr/bench.txt
    - uses: actions/upload-artifact@v2
      with:
        name: pr
        path: pr/
