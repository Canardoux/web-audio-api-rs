// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.36.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'context.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// The type `AudioNodeIdProvider` is not used by any `pub` functions, thus it is ignored.
// The type `ConcreteBaseAudioContextInner` is not used by any `pub` functions, thus it is ignored.

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ConcreteBaseAudioContext>>
@sealed
class ConcreteBaseAudioContext extends RustOpaque {
  ConcreteBaseAudioContext.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  ConcreteBaseAudioContext.sseDecode(BigInt ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_ConcreteBaseAudioContext,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_ConcreteBaseAudioContext,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_ConcreteBaseAudioContextPtr,
  );

  /// Inform render thread that this node can act as a cycle breaker
  Future<void> markCycleBreaker(
          {required AudioContextRegistration reg, dynamic hint}) =>
      RustLib.instance.api
          .crateApiContextConcreteBaseConcreteBaseAudioContextMarkCycleBreaker(
              that: this, reg: reg, hint: hint);
}
