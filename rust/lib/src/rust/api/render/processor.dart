// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.36.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import '../context/context.dart';
import '../events.dart';
import '../worklet.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// The type `DerefAudioRenderQuantumChannel` is not used by any `pub` functions, thus it is ignored.

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AudioWorkletGlobalScope>>
@sealed
class AudioWorkletGlobalScope extends RustOpaque {
  AudioWorkletGlobalScope.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  AudioWorkletGlobalScope.sseDecode(BigInt ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_AudioWorkletGlobalScope,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_AudioWorkletGlobalScope,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_AudioWorkletGlobalScopePtr,
  );

  BigInt get currentFrame => RustLib.instance.api
          .crateApiRenderProcessorAudioWorkletGlobalScopeGetCurrentFrame(
        that: this,
      );

  double get currentTime => RustLib.instance.api
          .crateApiRenderProcessorAudioWorkletGlobalScopeGetCurrentTime(
        that: this,
      );

  double get sampleRate => RustLib.instance.api
          .crateApiRenderProcessorAudioWorkletGlobalScopeGetSampleRate(
        that: this,
      );

  /// Send a message to the corresponding AudioWorkletNode of this processor
  ///
  /// This method is just a shim of the full
  /// [`MessagePort`](https://webaudio.github.io/web-audio-api/#dom-audioworkletprocessor-port)
  /// `postMessage` functionality of the AudioWorkletProcessor.
  Future<void> postMessage({required BoxAny msg, dynamic hint}) =>
      RustLib.instance.api
          .crateApiRenderProcessorAudioWorkletGlobalScopePostMessage(
              that: this, msg: msg, hint: hint);

  void set currentFrame(BigInt currentFrame) => RustLib.instance.api
      .crateApiRenderProcessorAudioWorkletGlobalScopeSetCurrentFrame(
          that: this, currentFrame: currentFrame);

  void set currentTime(double currentTime) => RustLib.instance.api
      .crateApiRenderProcessorAudioWorkletGlobalScopeSetCurrentTime(
          that: this, currentTime: currentTime);

  void set sampleRate(double sampleRate) => RustLib.instance.api
      .crateApiRenderProcessorAudioWorkletGlobalScopeSetSampleRate(
          that: this, sampleRate: sampleRate);
}
